

///*
// * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
// * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
// */
package forme;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.RandomAccessFile;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Korisnik;
import model.ModelPrijava;
import model.ModelZemlja;
import model.Prijava;
import model.Stanovnik;
import model.Stavka;
import model.WrapPrijava;
import model.Zemlja;
import transfer.KlijentZahtev;

///**
// *
// * @author USER
// */
public class RegistovanForma extends javax.swing.JFrame {
//
//    /**
//     * Creates new form RegistovanForma
//     */
    private ModelPrijava mp;
    private ModelZemlja mz;
    private Korisnik k;
    private Stanovnik s;
    public RegistovanForma(Stanovnik s) {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Pregled i prijava putovanja - registrovan");
        this.k=s.getK();
        this.s=s;
        jLabel1.setText(jLabel1.getText()+" "+s.toString());
        komunikacija.Komunikacija.getInstance().posalji(new KlijentZahtev(operacije.Operacije.vrati_z, ""));
        for(Zemlja z:(List<Zemlja>)komunikacija.Komunikacija.getInstance().procitaj().getOdg())
        {
           jComboBox2.addItem(z);
        }
        mz=new ModelZemlja(new ArrayList<>());
        jTable_z.setModel(mz);
        komunikacija.Komunikacija.getInstance().posalji(new KlijentZahtev(operacije.Operacije.vrati_prijave, s));
        mp=new ModelPrijava((List<WrapPrijava>)komunikacija.Komunikacija.getInstance().procitaj().getOdg());
        jTable_p.setModel(mp);
    }
//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jTextField_di = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField_du = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_z = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_p = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        jMenu1.setText("Meni");

        jMenuItem1.setText("Prijavi putovanje");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Vidi dosadasnja putovanja");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setText("Datum ulaska(dd.MM.yyyy.):");

        jLabel5.setText("Datum izlaska(dd.MM.yyyy.):");

        jLabel8.setText("Zemlja/zemlje putovanja:");

        jButton1.setText("Dodaj zemlju");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Obrisi zemlju");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable_z.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Unete zemlje"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_z.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable_z);

        jButton3.setText("Prijavi putovanje");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Dobrodosli, ");

        jTable_p.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable_p);

        jLabel2.setText("Dosadasnje prijave:");

        jButton5.setText("Izmeni prijavu");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton2))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jButton3)))
                        .addContainerGap(64, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField_du)
                                .addGap(9, 9, 9))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField_di)
                                .addGap(9, 9, 9))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(9, 9, 9))))
            .addGroup(layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(jButton5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField_du, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField_di, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(mz.getL().contains((Zemlja)jComboBox2.getSelectedItem()))return ;
        mz.getL().add((Zemlja) jComboBox2.getSelectedItem());
        mz.fireTableDataChanged();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int r=jTable_z.getSelectedRow();
        if(r==-1)return ;
        mz.getL().remove(r);
        mz.fireTableDataChanged();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(mz.getL().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Prijava mora imati bar jednu zemlju");return ;
        }
        if(!validacijaDatuma())return ;
        Date du=null, di=null;
        try {
            du=new SimpleDateFormat("dd.MM.yyyy.").parse(jTextField_du.getText());
            di=new SimpleDateFormat("dd.MM.yyyy.").parse(jTextField_di.getText());
        } catch (Exception e) {}
        
        Prijava p=new Prijava(-1, s, du, di, null);
        List<Stavka>l=new ArrayList<>();
        List<String>zemlje=new ArrayList<>();
        for(Zemlja z:mz.getL())
        {
            zemlje.add(z.getNaz());
            l.add(new Stavka(p, z));
        }
        
        komunikacija.Komunikacija.getInstance().posalji(new KlijentZahtev(operacije.Operacije.proveraPutovanja, l));
        if(!(boolean)komunikacija.Komunikacija.getInstance().procitaj().getOdg())
        {
            JOptionPane.showMessageDialog(this, "Korisnik vec ima prijavljeno putovanje u tom periodu za neku od zemalja");return ;
        }
        
        komunikacija.Komunikacija.getInstance().posalji(new KlijentZahtev(operacije.Operacije.sacuvaj_prijavu, l));
        if((boolean)komunikacija.Komunikacija.getInstance().procitaj().getOdg())
        {
           JOptionPane.showMessageDialog(this, "Uspesno sacuvana prijava");
           mp.getL().add(new WrapPrijava(p, String.join(",", zemlje)));
           mp.fireTableDataChanged();

           String fajlTxt=(String)komunikacija.Komunikacija.getInstance().procitaj().getOdg();
           String fajlNaz="prijava_"+new SimpleDateFormat("dd_MM_yyyy_HH_mm_ss").format(new Date())+".txt";
           String fajlPut=System.getProperty("user.dir")+"\\"+fajlNaz;
 
           try (PrintWriter pw=new PrintWriter(fajlPut)){
                pw.write(fajlTxt);
             } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Greska pri cuvanju fajla sa detaljima prijave\n"+fajlTxt);
                return;
            }
            
            JOptionPane.showMessageDialog(this, "Prijava sacuvana na lokaciji: "+fajlPut+"\n"+fajlTxt, "Uspesno sacuvan fajl", JOptionPane.INFORMATION_MESSAGE);
           return ;
        }
        JOptionPane.showMessageDialog(this, "Neuspesno sacuvana prijava");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int r=jTable_p.getSelectedRow();
        if(r==-1)return ;
        if(jTable_p.getValueAt(r, 4).equals("U OBRADI"))
        {
            Izmena i=new Izmena(this, mp.getL().get(r));
            i.setVisible(true);
            i.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        }
        else JOptionPane.showMessageDialog(this, "Nije moguce izmeniti prijavu!");
    }//GEN-LAST:event_jButton5ActionPerformed

    public ModelPrijava getMp() {
        return mp;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<Zemlja> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_p;
    private javax.swing.JTable jTable_z;
    private javax.swing.JTextField jTextField_di;
    private javax.swing.JTextField jTextField_du;
    // End of variables declaration//GEN-END:variables

    void osvezi() {
        mp.fireTableDataChanged();
    }

    private boolean validacijaDatuma() {
        Date du=null, di=null;
        try {
            du=new SimpleDateFormat("dd.MM.yyyy.").parse(jTextField_du.getText());
            di=new SimpleDateFormat("dd.MM.yyyy.").parse(jTextField_di.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Los format datuma ulaska i/ili izlaska");return false ;
        }
        Date d=new Date();
        SimpleDateFormat format=new SimpleDateFormat("dd.MM.yyyy.");
        try {
            d=format.parse(format.format(d));
        } catch (ParseException ex) {
            Logger.getLogger(Izmena.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(du.compareTo(d)<0)
        {
            JOptionPane.showMessageDialog(this, "Datuma ulaska ne sme da bude pre danasnjeg");return  false;
        }
        if(di.before(du))
        {
            JOptionPane.showMessageDialog(this, "Datuma izlaska ne sme da bude pre datuma ulaska");return  false;
        }
        Date dicist=null;
        Date ducist=null;
         try {
            ducist=format.parse(format.format(du));
            dicist=format.parse(format.format(di));
        } catch (ParseException ex) {
            Logger.getLogger(PrijavaNeregistrovan.class.getName()).log(Level.SEVERE, null, ex);
        }
        int brdana=(int) ((dicist.getTime()-ducist.getTime())/1000/60/60/24);
        if(brdana>90)
        {
            JOptionPane.showMessageDialog(this, "Korisnik moze da se zadrzi maksimalno 90 dana na putu");return  false;
        }
        return true;
    }
 
}
